package com.jt.utils;

import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.apache.http.HttpEntity;
import org.apache.http.client.config.RequestConfig;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.util.EntityUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;

@Component
public class HttpClientService {
	@Autowired
	private CloseableHttpClient httpClient;
	
	@Autowired
	private RequestConfig requestConfig;
	
	/**
	 * 构建get方法工具类
	 */
	public String doGet(String url,Map<String,String> params,String charset) {
		if(StringUtils.isEmpty(charset)) {
			//默认为utf-8
			charset = "utf-8";
		}
		if(params != null) {
			String param = null;
			Set<Entry<String, String>> entrySet = params.entrySet();
			for(Entry<String,String> entry :entrySet) {
				String key = entry.getKey();
				String value = entry.getValue();
				param = key+"="+value+"&";
			}
			url = url+"?"+param.substring(0,param.length()-2);
		}
		
		//定义请求对象
		HttpGet get = new HttpGet(url);
		//设定超时时间
		get.setConfig(requestConfig);
		String result = null;
		try {
			CloseableHttpResponse response = httpClient.execute(get);
			if(response.getStatusLine().getStatusCode()==200) {
				HttpEntity entity = response.getEntity();
				result= EntityUtils.toString(entity,charset);
			}
		} catch (Exception e) {
			e.printStackTrace();
			throw new RuntimeException();
		} 
		return result;
	}
	
	public String doGet(String url) {
		return doGet(url, null, null);
	}
	
	public String doGet(String url,Map<String,String> params) {
		return doGet(url, params, null);
	}
}
